상속 extends

상속으로 기능 확장하기
상속을 이용하면 기존의 코드를 손대지 않고 기능을 확장할 수 있다.
기존의 기능을 복사할 필요도 없다.
단지 기존 코드의 링크 정보를 기술한 다음에 
새기능을 추가하면 된다.

상속을 받은 클래스의 인스턴스를 만드는 과정 
1 )상속을 받은 서브 클래스가 참조하는 수퍼 클래스가 있다면 그 클래스의 코드를 보고 인스턴스 변수를 생성한다.
2 )상속을 받은 서브클래스의 인스턴스 변수가 있다면 인스턴스 변수를 생성한다

상속관계에서 메서드를 호출하는 과정
1) 현재 클래스 에서 메서드를 찾는다
	있다면 호출
	없드면 수퍼 클래스(...의 수퍼클래스, ...의 수퍼 클래스) 에서 찾는다
	있드면 호출
	없다면 오류
상속 관계에서 인스턴스를 생성 할때
수퍼 클래스를 찾아 올라가서 그 클래스에 정의된 인스턴스 변수를 확인하여 만든다.

상속을 하는 이유는 결국 유지보수를 위해서다

상속에 대한 오해 

상속이라는 단어가 갖는 뜻 때문에 개발자들이 많은 오해를 하는대 서브 클래스는 수퍼클래스의 코드를 복사해오는 것이 아니라
서브 클래스는 수퍼클래스에 대한 링크 정보만 갖고 있는다 그래서 서브 클래스는 수퍼클래스의 멤버를 사용할 때마다
그 수퍼 클래스에 찾아가서 코드를실행할 뿐이다. 그래서 서브 클래스를 사용하려면 반드시 그 서브 클래스가 링크하는 모든 수퍼 클래스가 있어야 한다.


상속은 크게 두 가지의 기법이 있는대

1) Specialization(전문화)와 Generalization(일반화) 방식이 있다 
전문화는 수퍼 클래스를 상속 받아 기능을 추가하여 더 특별한 서브 클래스를 만드는 것이고
일반화는 서브 클래스들의 공통 변수나 공통 메서드를 추출하여 수퍼 클래스를 정의하는 것이다

다형성

수퍼클래스의 레퍼런스는 서브 클래스의 인스턴스 주소를 저장할 수 있다.




