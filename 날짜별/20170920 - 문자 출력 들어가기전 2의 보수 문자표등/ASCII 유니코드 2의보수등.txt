2진수의 음수표현
1의 보수
2의 보수
3 = 0011
-3 = 0011 -> 1100 -> 1101 


API 프로그램 파일 도구

하드디스크 
파일시스템
FAT = 요즘은 안씀 파일의 제목을 1~8자뿐이 못씀
FAT32 = 파일의 제목을 256자 가능하지만 파일에 접근하는 정보등은 모름
NTFS = 파일의 접근정보라든지를 다 가질수 있음 하지만 윈도우에서만 사용 가능해서 mac 등에서는 사용 불가능하다  USB주의

물리적 할당크기 
단위가 작을수록 작은파일을 저장할때 좋지만
단위가 클수록 작을파일을 저장할시 버려지는 크기가큼

CRLF = 엔터키


Character Sets (문자집합)
->문자를 저장하는 전기적 신호규칙
-> 문자를 저장할때 사용하는 코드 규칙
-> 문자 코드 규칙들 -> Character set
-> 문자집합 대표적인 물음표 스페이스바 앤드 퍼센트 
	? &%는 알아두자	?=0x3F 스페이스바=0x20 &=0x26 %=0x25
1)	ASCII (7bit) 128이하의 문자에 대한 코드 규칙(대문자 소문자 숫자 특수문자) 
2)	ISO-8859-1(8bit) ASCII에 유럽어가 빠져유럽애들이 삐져서 만든게 
(ISO-latin-1)=ASCII+유럽어 128+128 (국제표준)
3)EUC-KR(2byte) 2350자 = 완성형 
--> 가 1011 0000 1010 0001 
	0x  B	   0		A	  1
	각 --> 0xB0A2
	간 --> 0xB0A3
4)조합형 한글표현(1) 초성(5) 중성(5) 종성(5) 16bit로 표현
 
5)MS949(=CP949)
	2350+@  = 11172자
	 똘 B6CA
	 똠	BC63
똥 B6CB  == 기존에 있던  똘똥에 똠이 추가된거라 똠이더 뒤로간다	

6)Unicode(2Byte)= 한글이던 영어던 2Byte (국제표준)
A->0x0041  가=0xAC00
b->0x0042	각=0xAC01

7)UTF-8 유니코드에 있는 문자의 규칙을 재정의
	Unicode		UTF-8
A	0x0041 			0x41
가	0xAC00			EAB080
유니코드 한글을 UTF8로 바꾸는 공식 
==>0800 ~ FFFF (2Byte)
	1110xxxx 10xxxxxx 10xxxxxx
가 => A		C		0		0
	   1010	     1100    0000   0000
+1110xxxx	10xxxxxx 	10xxxxxx	10xxxxxx
  11101010 10110000	10000000	10000000
 	EA			B		8		9

	규칙
값--------------->전기적신호(code)
     변환
 "코드화(encoder)

					규칙
전기적 신호(code)-------------->값
					복원
	" 복호화(decode)"
code+decode = codec ㅋㅋㅋㅋ

주시경 사전 시간나면 찾아보라