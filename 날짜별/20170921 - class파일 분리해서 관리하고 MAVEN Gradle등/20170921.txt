파일 : Test03.java

// .class 클래스 파일 분리하기
// .class 파일을 관리하기 쉽도록 별도의 폴더로 분리 하는 방법을 알아 보자
// 왜 .class 파일을 소스파일로부터 분리 하는가?

 분리
 >javac -d [.clsass 파일을 저장할 폴더][소스파일명]
  예)
  >md bin (bin 폴더만들기) 
  >javac -d bin Test03.java
  
  이유: 소스파일과 클래스파일을 분리함으로써 
        소스파일을 관리하기 쉽고 배포를 위해 클래스 파일을 추출하기 쉽다.
  다른 폴더에 있는 클래스 실행하기
  >java -classpath[.파일이 있는 폴더] 클래스명
  >java -cp [.파일이 있는 폴더] 클래스명
운영체제에 .class 파일이 있는 폴더를 등록해두면
.class 파일을 실행할 때 마다 매번 -cp 또는 -classpath를 사용하여\
.class파일이 있는 경로를 지정할 필요가 없다
//

>set CLASSPATH=[클래스파일이 있는 폴더]
예)
> set CLASSPATH = c:\workspace\java-basic\bin
> java Test03


--------------------------여러폴더 설정법---------------------------------
  >java -classpath[파일이 있는 폴더1;폴더2;폴더3] 클래스명
  >java -cp [파일이 있는 폴더1;폴더2;폴더3] 클래스명

CMD창안에서 다른폴더에 있는 클래스파일 실행할때 
CMD창이 켜있는동안 주소를 미리 지정하는법
cmd 창을 열고
set CLASSPATH=c:\workspace\java-basic\bin
항상 이장소를 이용하고싶다면 환경변수에 저장한다

파일 : Test04.java

// .java 소스 파일 분리하기
// .java 소스 파일을 관리하기 쉽도록 별도의 폴더로 분리 하는 방법을 알dk 보자

/* 분리
 >javac -d [.clsass 파일을 저장할 폴더][폴더명/../소스파일명]
  예)
  >md src ( 폴더만들기) 
	md src는 소스파일을 저장하는 위치 소스파일은 앞으로 src에 저장한다
  >javac -d bin src/Test04.java
	-d bin은 Test04.java파일에서 생성되는 class파일을 bin이라는 위치에 저장하는 것이다


 
  이유: 소스 파일을 관리 보다 쉽게 관리하기 위함


------------관공서 프레임워크 https://www.egovframe.go.kr/ --------------------
여기가면 우리나라 관공서 프레임 워크임
------------스프링 프레임워크 짓허브 https://github.com/spring-projects/ ------
--------------컴퓨터 쪽 세상강의  https://www.edx.org/contact-us--------------
---------------http://mooc.org/ 세상 모든 대학의 모든 강의가 올라가 있다
-----------------desktop.github.com--------------------- 짓허브 데스크탑처럼 쓰기

// .java 소스 파일 분리하기 2 Test05
// Maven 프로젝트의 디렉토리 구조를 알아보자!
// 왜 Maven 프로젝트의 디렉토리 구조를 사용하는가 ? = 국제 표준처럼 사용해서
/* Maven 프로젝트 디렉토리 구조
$java-basic프로젝트폴더 변경 
	/bin -- 클래스 파일위치
	/example -- Test 완료한 java파일 위치
    /src
      /main
        /java        <==자바 소스 파일을 두는 폴더
        /resources   <==프로그램 설정 파일을 두는 폴더
        /webapp      <== 웹 애플리케이션 관련 파일을 두는 폴더
      /test
        /java        <== 자바 테스트 소스 파일을 두는 폴더
        /resources   <== 자바 테스트 관련 설정 파일을 두는 폴더
  이유?
  -국제적으로 자바 프로젝트를 관리할 떄 이 구조를 사용한다.
  -국제 표준이다.
  */

-----------------구조를 자동으로 만들어줄게 필요하다
*build 도구
컴파일. 배포파일 생성,테스트,문서생성등 개발 전과정을 말하는 용어
	1) ant 
		-build.xml 설정파일에 빌드 작업을 기술한다
	2)Maven 
		-pom,xml- ant에 의존 부품을 자동분리 기능을 추가함
	3)Gradle
		-build.gradle 복잡한 빌드 작업을 기술할수있도록 함

------gradle 파일 다운 받으세욧 사진파일 확인하기 ----------

---------c\에 파일풀고 환경변수 설정하세요  C:\gradle-4.2-----------

 -국제적으로 자바 프로젝트를 관리할 떄 이 구조를 사용한다.
  -국제 표준.

   Gradle 빌드 도구를 이용하여 Maven 프로젝트 구조로 디렉토리를 자동  생성하기
   >gradle init --type java-application
   => Gradle 빌드 도구 관련 설정 파일들이 자동으로 생성된다
   => 또한 Maven 프로젝트 구조에 맞춰서 폴더들이 자동생성된다.
   => 간단한 예제 파일이 자동 생성된 폴더에 저장된다.

   build.gradle
   => 자동으로 생성된 파일 중에서 개발자가 직접 손대는 파일
   => 이 파일에 빌드에 관련된 작업 내용을 기술한다.
   => 작업 명령은 groovy라는 언어를 사용해서 기술한다.
   => groovy는 자바 호환 언어이다. 즉 자바와 함께 사용할 수 있다.
   => 빌드 작업을 작성하는 자세한 사항은 문서를 보라!

   *자바 호환 언어란?
   => 컴파일하면 .class 파일을 만드는 언어.
   => 바이너리 수준(bytecode 수준) 에서 호환된다
   => 바로 만든 모든 코드를 100% 사용할 수 있고,
      자바에서도 호환 언어로 작성된 코드를 100% 서용할 수 있다.
   => 예) Scala, Groovy, Kotlin 등이 있다.
	
   Gradle을 이용하여 프로젝트를 빌드한다
   >gradle build
   =>1) 의존하고 있는 외부 라이브러리를 자동 다운 받는다.
   =>2) build라는 폴더가 생성된다
   =>3) build 폴더에 컴파일 된 파일들을 놓는다.
   =>4) 테스트 프로그램이 있으면 실행한다.

   라이브러리?
   - 다른 개발자가 만든 코드들의 묶음
   - 보통 .jar 파일에 묶여서 배포된다.
   - JAR(Java ARchive)의 약자이다.
   - "archive"는 묶음을 의미한다.
   - 그런데 영어 사전에 "jar"라는 단어가 있다. 
     의미는 "(꿀)단지"라는 뜻이 있어 묵음이라는 의미를 표현해 준다.
   - 압축을 할 때는 zip 알고리즘(압축공식)으로 압축한다.
     왜? zip 알고리즘은 특허로 등록되어 있지 않다.

--------그래들 기본 명령어 사용하기 파일을 보자... 많다 --------------
