<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- DAO 객체를 자동으로 생성하려면, namespace의 값이 인터페이스 이름과 같아야 한다. -->
<mapper namespace="java100.app.dao.BoardDao">


	<resultMap type="board" id="boardMap">
		<id column="no" property="no" />
		<result column="title" property="title" />
		<result column="conts" property="content" />
		<result column="regdt" property="regDate" />
		<result column="vwcnt" property="viewCount" />
	
	
		<association property="writer" javaType="member">
			<id column="m_no" property="no"/>
			<result column="m_name" property="name"/>
		</association>
		
		 <!-- 첨부파일 정보를 담을 수 있도록 설정한다. -->
        <collection property="files"  ofType="uploadFile">
            <id     column="f_no"       property="no"/>
            <result column="filename"   property="filename"/>
        </collection>
	
	
	</resultMap>

	<sql id="select1">
		select
		no, title, regdt, vwcnt
	</sql>


	<select id="findAll" resultMap="boardMap" parameterType="map">
	select
		b.no,
		b.title,
		b.regdt,
		b.vwcnt,
		m.no as m_no,
		m.name as m_name
		from ex_board as b join ex_memb as m on b.mno=m.no

		<if test="titles != null">
	        <where>
	        	title in
	            <foreach collection="titles" item="title" open="(" close=")" separator=",">
	                #{title}
	            </foreach>
	              or no in 
                <foreach collection="titles" item="title" open="(" close=")" separator=",">
                    #{title}
                </foreach>
	        </where>
        </if>

		<!-- 정렬 조건에 따라 SQL문을 변경한다. -->
		order by
		<choose>
			<when test="orderColumn == 'vwcnt' and align == 'desc'">
				vwcnt desc
			</when>
			<when test="orderColumn == 'no' and align == 'asc'">
				no asc
			</when>
			<when test="orderColumn == 'title' and align == 'desc'">
				title desc
			</when>
			<otherwise>
				no asc
			</otherwise>
		</choose>
	</select>

	    <select id="findByNo" resultMap="boardMap" parameterType="int">
        <include refid="select1"/>
          ,conts
        from ex_board
        where no=#{value}
    </select>
    
    <select id="findByNo2" resultMap="boardMap" parameterType="int">
        select 
		    b.no, 
		    b.title, 
		    b.conts, 
		    b.regdt, 
		    b.vwcnt, 
		    m.no as m_no, 
		    m.name, 
		    m.email,
		    f.no as f_no,
		    f.filename
		from 
		    ex_board as b 
		    join ex_memb as m on b.mno=m.no
		    left join ex_file as f on b.no=f.bno
        where b.no=#{value}
    </select>
	
	<select id="countAll" resultType="int">
		select count(*) from ex_board
	</select>
	

   <insert id="insert" parameterType="board"
        useGeneratedKeys="true" keyColumn="no" keyProperty="no">
        insert into ex_board(title,conts,regdt,mno)
        values(#{title},#{content},now(),#{writer.no})
    </insert>


	<update id="update" parameterType="board">
		update ex_board set
		title=#{title},
		conts=#{content}
		where no=#{no}
	</update>

	<update id="updateViewCount" parameterType="int">
        update ex_board set 
            vwcnt=vwcnt + 1
        where no=#{value}
    </update>

	<delete id="delete" parameterType="int">
		delete from ex_board where no=#{value}
	</delete>
	

</mapper>  









